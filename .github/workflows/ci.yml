name: build-and-deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

  workflow_dispatch:

env:
  BOT_NAME: discord-bot:ver-${{ github.run_number }}
  HEROKU_APP_NAME: discord-bot-ekubo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Docker Login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Docker Build
        run: docker build . --file Dockerfile --tag ${{ env.BOT_NAME }} --build-arg TOKEN_ARG=${{ secrets.BOT_TOKEN }}

      - name: Docker Tag
        run: docker tag ${{ env.BOT_NAME }} ${{ secrets.DOCKER_USER }}/${{ env.BOT_NAME }}

      - name: Docker Push
        run: docker push ${{ secrets.DOCKER_USER }}/${{ env.BOT_NAME }}

      - name: Create Status File
        if: ${{ always() }}
        run: |
          echo ${{ job.status }} > build_status.txt

      - name: Upload Status File
        if: ${{ always() }}
        uses: actions/upload-artifact@v1
        with:
          name: build_status
          path: build_status.txt
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Heroku
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ env.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
          docker_build_args: |
            TOKEN_ARG
        env:
          TOKEN_ARG: ${{ secrets.BOT_TOKEN }}

      - name: Create Status File
        if: ${{ always() }}
        run: |
          echo ${{ job.status }} > deploy_status.txt

      - name: Upload Status File
        if: ${{ always() }}
        uses: actions/upload-artifact@v1
        with:
          name: deploy_status
          path: deploy_status.txt
          retention-days: 1

  telegram:
    needs: [build, deploy]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact build_status
        uses: actions/download-artifact@v1
        with:
          name: build_status

      - name: Download Artifact deploy_status
        uses: actions/download-artifact@v1
        with:
          name: deploy_status

      - name: Set Jobs Statuses as Output Parameters
        id: set_outputs
        run: |
          echo "::set-output name=build_status::$(<build_status/build_status.txt)"
          echo "::set-output name=deploy_status::$(<deploy_status/deploy_status.txt)"

      - name: Send Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:

            Commit message: ${{ github.event.commits[0].message }}
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

            GitHub Actions Statuses:
            Job Build: ${{ steps.set_outputs.outputs.build_status }}
            Job Deploy: ${{ steps.set_outputs.outputs.deploy_status }}
